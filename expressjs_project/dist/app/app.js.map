{"version":3,"sources":["../../app/app.js"],"names":["express","require","reload","app","io","dataFile","set","process","env","PORT","locals","allSpeakers","speakers","use","static","port","get","server","listen","console","log","attach","on","socket","data","emit"],"mappings":";;AAAA;;;;AAIA,IAAOA,UAAUC,QAAQ,SAAR,CAAjB;AACA,IAAMC,SAASD,QAAQ,QAAR,CAAf;AACA,IAAME,MAAMH,SAAZ;AACA,IAAMI,KAAKH,QAAQ,WAAR,GAAX;AACA,IAAOI,WAAWJ,QAAQ,kBAAR,CAAlB;;AAEAE,IAAIG,GAAJ,CAAQ,MAAR,EAAeC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAnC;AACAN,IAAIG,GAAJ,CAAQ,SAAR,EAAkBD,QAAlB;AACAF,IAAIG,GAAJ,CAAQ,aAAR,EAAsB,KAAtB;AACAH,IAAIG,GAAJ,CAAQ,OAAR,EAAgB,WAAhB;;AAEAH,IAAIO,MAAJ,CAAWC,WAAX,GAAyBN,SAASO,QAAlC;;AAEAT,IAAIU,GAAJ,CAAQb,QAAQc,MAAR,CAAe,YAAf,CAAR;AACAX,IAAIU,GAAJ,CAAQZ,QAAQ,mBAAR,CAAR;AACAE,IAAIU,GAAJ,CAAQZ,QAAQ,qBAAR,CAAR;AACAE,IAAIU,GAAJ,CAAQZ,QAAQ,sBAAR,CAAR;AACAE,IAAIU,GAAJ,CAAQZ,QAAQ,iBAAR,CAAR;AACAE,IAAIU,GAAJ,CAAQZ,QAAQ,kBAAR,CAAR;;AAGA,IAAIc,OAAOZ,IAAIa,GAAJ,CAAQ,MAAR,CAAX;AACA,IAAIC,SAASd,IAAIe,MAAJ,CAAWH,IAAX,EAAgB,YAAY;AACrCI,YAAQC,GAAR,CAAY,uBAAuBL,IAAnC;AACH,CAFY,CAAb;;AAIAX,GAAGiB,MAAH,CAAUJ,MAAV;;AAEAb,GAAGkB,EAAH,CAAM,YAAN,EAAmB,UAAUC,MAAV,EAAkB;AACjCJ,YAAQC,GAAR,CAAY,gBAAZ;AACAG,WAAOD,EAAP,CAAU,aAAV,EAAwB,UAAUE,IAAV,EAAgB;AACpC;AACApB,WAAGqB,IAAH,CAAQ,eAAR,EAAwBD,IAAxB;AACH,KAHD;AAIH,CAND;;AAQAtB,OAAOe,MAAP,EAAcd,GAAd","file":"app.js","sourcesContent":["/**\n * Created by hoanganh on 03/08/2017.\n */\n\nconst  express = require('express');\nconst reload = require('reload');\nconst app = express();\nconst io = require('socket.io')();\nconst  dataFile = require('./data/data.json');\n\napp.set('port',process.env.PORT || 3000);\napp.set('appData',dataFile);\napp.set('view engine','ejs');\napp.set('views','app/views');\n\napp.locals.allSpeakers = dataFile.speakers;\n\napp.use(express.static('app/public'));\napp.use(require('./routes/index.js'));\napp.use(require('./routes/speakes.js'));\napp.use(require('./routes/feedback.js'));\napp.use(require('./routes/api.js'));\napp.use(require('./routes/chat.js'));\n\n\nlet port = app.get('port');\nlet server = app.listen(port,function () {\n    console.log('listening on port ' + port);\n});\n\nio.attach(server);\n\nio.on('connection',function (socket) {\n    console.log('user connected');\n    socket.on('postMessage',function (data) {\n        // console.log('user disconnected');\n        io.emit('updateMessage',data);\n    });\n})\n\nreload(server,app);"]}